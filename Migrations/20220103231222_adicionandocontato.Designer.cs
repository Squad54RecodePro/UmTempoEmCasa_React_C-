// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UmTempoEmCasa.Context;

#nullable disable

namespace UmTempoEmCasa.Migrations
{
    [DbContext(typeof(MVCContext))]
    [Migration("20220103231222_adicionandocontato")]
    partial class adicionandocontato
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("UmTempoEmCasa.Models.Anfitriao", b =>
                {
                    b.Property<int>("AnfitriaoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnfitriaoID"), 1L, 1);

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CNPJ")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("CPF")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Nascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AnfitriaoID");

                    b.ToTable("Anfitrioes");
                });

            modelBuilder.Entity("UmTempoEmCasa.Models.Anuncio", b =>
                {
                    b.Property<int>("AnuncioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnuncioID"), 1L, 1);

                    b.Property<int>("ImovelForeignKey")
                        .HasColumnType("int");

                    b.Property<int?>("ImovelID1")
                        .HasColumnType("int");

                    b.Property<DateTime>("inicio")
                        .HasColumnType("datetime2");

                    b.Property<float>("valor")
                        .HasColumnType("real");

                    b.HasKey("AnuncioID");

                    b.HasIndex("ImovelForeignKey");

                    b.HasIndex("ImovelID1");

                    b.ToTable("Anuncios");
                });

            modelBuilder.Entity("UmTempoEmCasa.Models.Imovel", b =>
                {
                    b.Property<int>("ImovelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImovelID"), 1L, 1);

                    b.Property<int>("AnfitriaoForeignKey")
                        .HasColumnType("int");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ImovelID");

                    b.HasIndex("AnfitriaoForeignKey");

                    b.ToTable("Imoveis");
                });

            modelBuilder.Entity("UmTempoEmCasa.Models.Refugiado", b =>
                {
                    b.Property<int>("RefugiadoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RefugiadoID"), 1L, 1);

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Nascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("RefugiadoID");

                    b.ToTable("Refugiados");
                });

            modelBuilder.Entity("UmTempoEmCasa.Models.Reserva", b =>
                {
                    b.Property<int>("ReservaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservaID"), 1L, 1);

                    b.Property<int>("AnuncioForeignKey")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RefugiadoForeignKey")
                        .HasColumnType("int");

                    b.HasKey("ReservaID");

                    b.HasIndex("AnuncioForeignKey");

                    b.HasIndex("RefugiadoForeignKey");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("UmTempoEmCasa.Models.Anuncio", b =>
                {
                    b.HasOne("UmTempoEmCasa.Models.Imovel", "Imovel")
                        .WithMany()
                        .HasForeignKey("ImovelForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UmTempoEmCasa.Models.Imovel", null)
                        .WithMany("Anuncios")
                        .HasForeignKey("ImovelID1");

                    b.Navigation("Imovel");
                });

            modelBuilder.Entity("UmTempoEmCasa.Models.Imovel", b =>
                {
                    b.HasOne("UmTempoEmCasa.Models.Anfitriao", "Anfitrioes")
                        .WithMany("Imovel")
                        .HasForeignKey("AnfitriaoForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anfitrioes");
                });

            modelBuilder.Entity("UmTempoEmCasa.Models.Reserva", b =>
                {
                    b.HasOne("UmTempoEmCasa.Models.Anuncio", "Anuncios")
                        .WithMany("Reservas")
                        .HasForeignKey("AnuncioForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UmTempoEmCasa.Models.Refugiado", "Refugiados")
                        .WithMany("Reservas")
                        .HasForeignKey("RefugiadoForeignKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anuncios");

                    b.Navigation("Refugiados");
                });

            modelBuilder.Entity("UmTempoEmCasa.Models.Anfitriao", b =>
                {
                    b.Navigation("Imovel");
                });

            modelBuilder.Entity("UmTempoEmCasa.Models.Anuncio", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("UmTempoEmCasa.Models.Imovel", b =>
                {
                    b.Navigation("Anuncios");
                });

            modelBuilder.Entity("UmTempoEmCasa.Models.Refugiado", b =>
                {
                    b.Navigation("Reservas");
                });
#pragma warning restore 612, 618
        }
    }
}
